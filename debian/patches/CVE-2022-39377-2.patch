From c9a11d35df4aecfcf22aef827bac6cd57def9d4e Mon Sep 17 00:00:00 2001
From: Sebastien GODARD <sysstat@users.noreply.github.com>
Date: Sun, 23 Oct 2022 16:22:28 +0200
Subject: [PATCH] Add more overflow checks

Signed-off-by: Sebastien GODARD <sysstat@users.noreply.github.com>
---
 common.c    | 45 +++++++++++++++++++++------------------------
 common.h    |  4 ++--
 sa_common.c |  9 +++++++--
 sadc.c      |  6 ++++++
 4 files changed, 36 insertions(+), 28 deletions(-)

--- a/common.c
+++ b/common.c
@@ -431,6 +431,27 @@ int check_dir(char *dirname)
 	return 0;
 }
 
+/*
+ * **************************************************************************
+ * Check if the multiplication of the 3 values may be greater than UINT_MAX.
+ *
+ * IN:
+ * @val1	First value.
+ * @val2	Second value.
+ * @val3	Third value.
+ ***************************************************************************
+ */
+void check_overflow(unsigned long long val1, unsigned long long val2,
+		    unsigned long long val3)
+{
+	if (val1 * val2 * val3 > UINT_MAX) {
+#ifdef DEBUG
+		fprintf(stderr, "%s: Overflow detected (%llu). Aborting...\n",
+			__FUNCTION__, val1 * val2 * val3);
+#endif
+	exit(4);
+		}
+}
 
 #ifndef SOURCE_SADC
 /*
@@ -1658,28 +1679,4 @@ int parse_values(char *strargv, unsigned
 	return 0;
 }
 
-/*
- ***************************************************************************
- * Check if the multiplication of the 3 values may be greater than UINT_MAX.
- *
- * IN:
- * @val1	First value.
- * @val2	Second value.
- * @val3	Third value.
- ***************************************************************************
- */
-void check_overflow(size_t val1, size_t val2, size_t val3)
-{
-	if ((unsigned long long) val1 *
-	    (unsigned long long) val2 *
-	    (unsigned long long) val3 > UINT_MAX) {
-#ifdef DEBUG
-		fprintf(stderr, "%s: Overflow detected (%llu). Aborting...\n",
-			__FUNCTION__,
-			(unsigned long long) val1 * (unsigned long long) val2 *	(unsigned long long) val3);
-#endif
-	exit(4);
-	}
-}
-
 #endif /* SOURCE_SADC undefined */
--- a/common.h
+++ b/common.h
@@ -253,10 +253,10 @@ int get_wwnid_from_pretty
 	(char *, unsigned long long *, unsigned int *);
 int check_dir
 	(char *);
+void check_overflow
+	(unsigned long long, unsigned long long, unsigned long long);
 
 #ifndef SOURCE_SADC
-void check_overflow
-	(size_t, size_t, size_t);
 int count_bits
 	(void *, int);
 int count_csvalues
--- a/sa_common.c
+++ b/sa_common.c
@@ -452,8 +452,9 @@ void allocate_structures(struct activity
 		if (act[i]->nr_ini > 0) {
 
 			/* Look for a possible overflow */
-			check_overflow((size_t) act[i]->msize, (size_t) act[i]->nr_ini,
-				       (size_t) act[i]->nr2);
+			check_overflow((unsigned long long) act[i]->msize,
+				       (unsigned long long) act[i]->nr_ini,
+				       (unsigned long long) act[i]->nr2);
 
 			for (j = 0; j < 3; j++) {
 				SREALLOC(act[i]->buf[j], void,
@@ -518,6 +519,10 @@ void reallocate_all_buffers(struct activ
 		while (nr_realloc < nr_min);
 	}
 
+	/* Look for a possible overflow */
+	check_overflow((unsigned long long) a->msize, nr_realloc,
+		       (unsigned long long) a->nr2);
+
 	for (j = 0; j < 3; j++) {
 		SREALLOC(a->buf[j], void,
 			(size_t) a->msize * nr_realloc * (size_t) a->nr2);
--- a/sadc.c
+++ b/sadc.c
@@ -352,6 +352,12 @@ void sa_sys_init(void)
 		}
 
 		if (IS_COLLECTED(act[i]->options) && (act[i]->nr_ini > 0)) {
+
+			/* Look for a possible overflow */
+			check_overflow((unsigned long long) act[i]->msize,
+				       (unsigned long long) act[i]->nr_ini,
+				       (unsigned long long) act[i]->nr2);
+
 			/* Allocate structures for current activity (using nr_ini and nr2 results) */
 			SREALLOC(act[i]->_buf0, void,
 				 (size_t) act[i]->msize * (size_t) act[i]->nr_ini * (size_t) act[i]->nr2);
